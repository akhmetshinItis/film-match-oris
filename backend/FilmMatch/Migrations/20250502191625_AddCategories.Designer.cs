// <auto-generated />
using FilmMatch.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FilmMatch.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250502191625_AddCategories")]
    partial class AddCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FilmMatch.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("ImageAlt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 0,
                            ImageAlt = "Боевик",
                            ImageUrl = "https://avatars.mds.yandex.net/get-kinopoisk-image/1773646/3e7efab5-e108-4de0-99b6-8196d6cf7c21/1920x",
                            Name = "Боевик"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 0,
                            ImageAlt = "Детектив",
                            ImageUrl = "https://avatars.mds.yandex.net/get-kinopoisk-image/1773646/3e7efab5-e108-4de0-99b6-8196d6cf7c21/1920x",
                            Name = "Детектив"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 0,
                            ImageAlt = "Комедия",
                            ImageUrl = "https://avatars.mds.yandex.net/get-kinopoisk-image/1773646/3e7efab5-e108-4de0-99b6-8196d6cf7c21/1920x",
                            Name = "Комедия"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 0,
                            ImageAlt = "Мелодрама",
                            ImageUrl = "https://avatars.mds.yandex.net/get-kinopoisk-image/1773646/3e7efab5-e108-4de0-99b6-8196d6cf7c21/1920x",
                            Name = "Мелодрама"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 0,
                            ImageAlt = "Трагедия",
                            ImageUrl = "https://avatars.mds.yandex.net/get-kinopoisk-image/1773646/3e7efab5-e108-4de0-99b6-8196d6cf7c21/1920x",
                            Name = "Трагедия"
                        });
                });

            modelBuilder.Entity("FilmMatch.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageAlt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            ImageAlt = "",
                            ImageUrl = "",
                            Title = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
